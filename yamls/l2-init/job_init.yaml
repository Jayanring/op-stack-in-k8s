apiVersion: batch/v1
kind: Job
metadata:
  name: l2-initer
spec:
  backoffLimit: 0
  manualSelector: true
  selector:
    matchLabels:
      app: l2-initer
  template:
    metadata:
      labels:
        app: l2-initer
    spec:
      containers:
      - args:
        - 'op-node genesis l2 \

          --deploy-config /config/chain-cache.json \

          --deployment-dir /config/chain-cache/ \

          --outfile.l2 /config/genesis.json \

          --outfile.rollup /config/rollup.json \

          --l1-rpc $(cat /config/ETH_RPC_URL) && \

          openssl rand -hex 32 > /config/jwt.txt && \

          echo "jwt: $(cat /config/jwt.txt)"

          '
        command:
        - /bin/sh
        - -c
        image: docker.io/jayanring/op-node
        imagePullPolicy: IfNotPresent
        name: l2-op-node
        resources:
          limits:
            cpu: 2000m
            memory: 4196Mi
          requests:
            cpu: 1000m
            memory: 2048Mi
        volumeMounts:
        - mountPath: /config
          name: l2-config
      initContainers:
      - args:
        - 'pwd &&

          ./deploy.sh &&

          echo "deploy complete!" &&

          cp ./L1StandardBridgeProxy /config/ &&

          cp ./L2OutputOracleProxy /config/ &&

          cp ./ETH_RPC_URL /config/ &&

          cp ./L2_ChainID /config/ &&

          cp ./SEQUENCER_KEY /config/ &&

          cp ./BATCHER_KEY /config/ &&

          cp ./contracts-bedrock/deploy-config/chain-cache.json /config/ &&

          cp -r ./contracts-bedrock/deployments/chain-cache/ /config/ &&

          echo "cp config complete!"

          '
        command:
        - /bin/sh
        - -c
        image: docker.io/jayanring/op-deployer:compiled-v0.7.0
        imagePullPolicy: IfNotPresent
        name: l2-deploy
        resources:
          limits:
            cpu: 2000m
            memory: 4196Mi
          requests:
            cpu: 1000m
            memory: 2048Mi
        volumeMounts:
        - mountPath: /config
          name: l2-config
        - mountPath: /env
          name: l2-env
      restartPolicy: Never
      volumes:
      - configMap:
          name: l2-env
        name: l2-env
      - name: l2-config
        persistentVolumeClaim:
          claimName: l2-config-pvc
